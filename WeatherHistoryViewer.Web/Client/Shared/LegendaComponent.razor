@using WeatherHistoryViewer.Core.Models.Weather;
@using WeatherHistoryViewer.Config;

<style>
    #color_range {
        height: 100px;
        background-image: linear-gradient(to left, hsla(0,100%,50%,1),hsla(60,100%,50%,1), hsla(120,100%,50%,1),hsla(180,100%,50%,1), hsla(240,100%,50%,1));
    }

    .flex-container {
        display: flex;
    }   

        .flex-container > p {
            width: 33%;
            margin: 10px;
            text-align: center;
            line-height: 25px;
            font-size: 18px;
        }
</style>
<div style="        background-color: #f4f7f8; padding: 4px 3%; width: 600px
">
    <div>
        <h3 class="text-center">
            <b>@NameOfLegendaValue</b>
        </h3>
    </div>
    <div id="color_range">    </div>
    <div class="flex-container">
            <p class=" text-left">
                @Math.Round(MinValue,0)
            </p>
            <p class=" text-center">
                @Math.Round(AvgValue,0)
            </p>
            <p class=" text-right">
                @Math.Round(MaxValue,0)
            </p>
    </div>
    <br />
</div>

@code {
    [Parameter]
    public WeatherLegenda WeatherLegenda { get; set; }

    [Parameter]
    public string OverrideNameOfLegendaValue { get; set; }

    public double MaxValue { get; set; }
    public double AvgValue { get; set; }
    public double MinValue { get; set; }
    public string NameOfLegendaValue { get; set; }

    protected override void OnInitialized()
    {
        NameOfLegendaValue = OverrideNameOfLegendaValue ?? WebConfig.NameOfLegendaValue;
        MaxValue = (double)WeatherLegenda.Max.GetType().GetProperty(NameOfLegendaValue).GetValue(WeatherLegenda.Max);
        AvgValue = (double)WeatherLegenda.Max.GetType().GetProperty(NameOfLegendaValue).GetValue(WeatherLegenda.Avg);
        MinValue = (double)WeatherLegenda.Max.GetType().GetProperty(NameOfLegendaValue).GetValue(WeatherLegenda.Min);
    }
}
