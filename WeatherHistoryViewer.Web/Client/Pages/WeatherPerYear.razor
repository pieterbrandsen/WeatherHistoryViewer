@page "/weatherPerYear"
@using WeatherHistoryViewer.Core.Models.Weather
@using WeatherHistoryViewer.Services.Handlers
@using WeatherHistoryViewer.Core.Models
@using WeatherHistoryViewer.Services.Helpers
@using WeatherHistoryViewer.Core.ViewModels
@inject HttpClient Http

@if (_weatherOfYears == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="form-style">
        <div class="form-style-heading">Load weather data</div>
        <p>
            Currently loaded data for @_weatherOfYears.First().LocationName
        </p>
        <EditForm Model="@_formResponse" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <label for="location"><span>Location <span class="required">*</span></span><input type="text" class="input-field" @bind-value="@_formResponse.Location" list="locationSearch" /></label>
            <datalist id="locationSearch">
                @foreach (var name in _locationNames)
                {
                    <option>@name</option>
                }
            </datalist>

            <label><span> </span><input type="submit" value="Load" /></label>
        </EditForm>
    </div>
        <LegendaComponent WeatherLegenda="@_weatherLegenda"></LegendaComponent>
    <table class="table table-bordered" style="width: auto;">
        <thead>
            <tr>
                <th>Year</th>
                <th>Avg temp</th>
                <th>Max temp</th>
                <th>Date of max temp</th>
                <th>Min temp</th>
                <th>Date of min temp</th>
                <th>Average sun hours</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var year in _weatherOfYears)
            {
                <tr>
                    <th>@year.Year</th>
                    <th class="@year.CssBackgroundClass.AvgTemp">@year.AvgTemp</th>
                    <td class="@year.CssBackgroundClass.MaxTemp">@year.MaxTemp</td>
                    <td>@year.DateOfMaxTemp</td>
                    <td class="@year.CssBackgroundClass.MinTemp">@year.MinTemp</td>
                    <td>@year.DateOfMinTemp</td>
                    <td class="@year.CssBackgroundClass.SunHour">@year.SunHour</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private readonly WeatherHelper _weatherHelper = new();
    private readonly DateHelper _dateHelper = new();

    private readonly YearForm _formResponse = new();

    private List<WeatherOverview> _weatherOfYears;
    private WeatherLegenda _weatherLegenda;
    private List<string> _locationNames;

    protected override async Task OnInitializedAsync()
    {
        _locationNames = await Http.GetFromJsonAsync<List<string>>("/api/location/getLocationNames");
        var weatherOfYearsViewModel = await Http.GetFromJsonAsync<WeatherOfYearsViewModel>($"/api/weatherOf/years");
        _weatherOfYears = weatherOfYearsViewModel.WeatherOverviews;
        _weatherLegenda = weatherOfYearsViewModel.WeatherLegenda;
    }

    async void HandleValidSubmit()
    {
        var weatherOfYearsViewModel = await Http.GetFromJsonAsync<WeatherOfYearsViewModel>($"/api/weatherOf/years?location={_formResponse.Location}");
        _weatherOfYears = weatherOfYearsViewModel.WeatherOverviews;
        _weatherLegenda = weatherOfYearsViewModel.WeatherLegenda;
    }
}
