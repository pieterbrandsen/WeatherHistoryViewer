@page "/"
@using WeatherHistoryViewer.Core.Models.Weather
@using WeatherHistoryViewer.Core.ViewModels
@using WeatherHistoryViewer.Services.Helpers
@inject HttpClient Http

@if (_weatherOverviews == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <LegendaComponent WeatherLegenda="@_weatherLegenda"></LegendaComponent>
    <table class="table table-bordered" style="width: auto;">
        <thead>
            <tr>
                <th>City</th>
                <th>Avg temp</th>
                <th>Max temp</th>
                <th>Date of max temp</th>
                <th>Min temp</th>
                <th>Date of min temp</th>
                <th>Average sun hours</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var overview in _weatherOverviews)
            {
                <tr>
                    <th>@overview.LocationName</th>
                    <th class="@overview.CssBackgroundClass.AvgTemp">@overview.AvgTemp</th>
                    <th class="@overview.CssBackgroundClass.MaxTemp">@overview.MaxTemp</th>
                    <th>@overview.DateOfMaxTemp</th>

                    <th class="@overview.CssBackgroundClass.MinTemp">@overview.MinTemp</th>
                    <th>@overview.DateOfMinTemp</th>

                    <th class="@overview.CssBackgroundClass.SunHour">@overview.SunHour</th>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<WeatherOverview> _weatherOverviews;
    private WeatherLegenda _weatherLegenda;

    protected override async Task OnInitializedAsync()
    {
        var weatherOverviewViewModel = await Http.GetFromJsonAsync<WeatherOverviewViewModel>("/api/overview");
        _weatherOverviews = weatherOverviewViewModel.WeatherOverviews;
        _weatherLegenda = weatherOverviewViewModel.WeatherLegenda;
    }
}